//String Data Types - sequence of characters, "Hello" or 'Hello', + means concatenate, to convert numbers in a string into number using int(), preferably read data in using strings
index in a string starting with int 0 using []
eg. banana
fruit = 'banana'
letter = fruit[1]
print(letter) #a
x=3
w=fruit[x-1]
print(w) #n

#len function - to give length of a string
fruit='banana'
print(len(fruit)) #6

#Looping through strings
fruit = 'banana'
index = 0
while index < len(fruit):
    letter = fruit[index]
    print(index, letter)
    index = index + 1

#Using for loop
fruit = 'banana'
for letter in fruit:
    print(letter)

#Looping and counting
word = 'banana'
count = 0
for letter in word:

#Slicing strings [start:upto but not including]
s = "Learning Python"
print(s[0:8]) #Learning
print(s[9:10]) #P
print(s[9:15]) #Python
print(s[9:20]) #Python
print(s[:2]) #Le
print(s[8:]) # Python
print(s[:]) #Learning Python

//Manipulating strings

#String Concatenation using +
#String Concatenation
a = 'Hello'
b = a + 'World'
print(b) #HelloWorld
c = a + ' ' + 'World'
print(c) #Hello World

#Using in as a Logical Operator
fruit = 'banana'
'n' in fruit #True
'm' in fruit #False
'nan' in fruit #True
if 'a' in fruit:
    print('Found it!') #Found it!
    
#String comparison
word = 'bun'
if word == 'banana':
    print('All right, bananas.')
if word < 'banana':
    print('Your word,' + word + ', comes before banana.')
elif word > 'banana':
    print('Your word,' + word + ', comes after banana.')
else:
    print('All right, bananas.')
#Your word,bun, comes after banana.

#String Library - lower() is a method
greet = 'Hello World'
zap = greet.lower()
print(zap) #hello world
print(greet) #Hello World
print('Hi There'.lower()) #hi there
type(greet) #str
dir(greet) # Gives a list of methods ['__add__',
 '__class__',
 '__contains__',
 '__delattr__',
 '__dir__',
 '__doc__',
 '__eq__',
 '__format__',
 '__ge__',
 '__getattribute__',
 '__getitem__',
 '__getnewargs__',
 '__gt__',
 '__hash__',
 '__init__',
 '__init_subclass__',
 '__iter__',
 '__le__',
 '__len__',
 '__lt__',
 '__mod__',
 '__mul__',
 '__ne__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__rmod__',
 '__rmul__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__',
 'capitalize',
 'casefold',
 'center',
 'count',
 'encode',
 'endswith',
 'expandtabs',
 'find',
 'format',
 'format_map',
 'index',
 'isalnum',
 'isalpha',
 'isascii',
 'isdecimal',
 'isdigit',
 'isidentifier',
 'islower',
 'isnumeric',
 'isprintable',
 'isspace',
 'istitle',
 'isupper',
 'join',
 'ljust',
 'lower',
 'lstrip',
 'maketrans',
 'partition',
 'replace',
 'rfind',
 'rindex',
 'rjust',
 'rpartition',
 'rsplit',
 'rstrip',
 'split',
 'splitlines',
 'startswith',
 'strip',
 'swapcase',
 'title',
 'translate',
 'upper',
 'zfill']

str.capitalize()
str.center(width[,fillchar])
str.endswitch(suffix[,start[, end]])
str.find(sub[,start[,end]])
str.lstrip([chars])
str.replace(old,new[,count])
str.lower()
str.rstrip([chars])
str.strip([chars])
str.upper()

#Searching a string
#Searching a string
fruit = 'banana'
pos = fruit.find('na')
print(pos) #2
aa = fruit.find('z')
print(aa) #-1

#Search and replace
greet = 'Hello People'
n = greet.replace('People', 'World')
print(n) #Hello World
a = greet.replace('o','0')
print(a) #Hell0 Pe0ple

#Stripping whitespace
greet = '   Hello World'
print(greet) #   Hello World
greet.rstrip() #'   Hello World'
greet.lstrip() #'Hello World'
greet.strip() #'Hello World'

#Prefixes
line = 'Please have a wonderful day'
line.startswith('Please') #True
line.startswith('p') #False

#Parsing and extracting
data = 'From XYZ.uni@gmail.com Mon Jan 18 03:10:16 2021'
atpos = data.find('@')
print(atpos) #12
sppos = data.find(' ', atpos)
print(sppos) #22
host = data[atpos+1 : sppos]
print(host) #gmail.com




 

